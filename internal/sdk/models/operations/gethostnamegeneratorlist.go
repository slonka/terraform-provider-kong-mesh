// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/kong/terraform-provider-kong-mesh/internal/sdk/internal/utils"
	"github.com/kong/terraform-provider-kong-mesh/internal/sdk/models/shared"
	"net/http"
)

// GetHostnameGeneratorListQueryParamFilter - filter by labels when multiple filters are present, they are ANDed
type GetHostnameGeneratorListQueryParamFilter struct {
	Key   *string `queryParam:"name=key"`
	Value *string `queryParam:"name=value"`
}

func (g *GetHostnameGeneratorListQueryParamFilter) GetKey() *string {
	if g == nil {
		return nil
	}
	return g.Key
}

func (g *GetHostnameGeneratorListQueryParamFilter) GetValue() *string {
	if g == nil {
		return nil
	}
	return g.Value
}

type GetHostnameGeneratorListRequest struct {
	// offset in the list of entities
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
	// the number of items per page
	Size *int64 `default:"100" queryParam:"style=form,explode=true,name=size"`
	// filter by labels when multiple filters are present, they are ANDed
	Filter *GetHostnameGeneratorListQueryParamFilter `queryParam:"style=form,explode=true,name=filter"`
}

func (g GetHostnameGeneratorListRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetHostnameGeneratorListRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (g *GetHostnameGeneratorListRequest) GetOffset() *int64 {
	if g == nil {
		return nil
	}
	return g.Offset
}

func (g *GetHostnameGeneratorListRequest) GetSize() *int64 {
	if g == nil {
		return nil
	}
	return g.Size
}

func (g *GetHostnameGeneratorListRequest) GetFilter() *GetHostnameGeneratorListQueryParamFilter {
	if g == nil {
		return nil
	}
	return g.Filter
}

type GetHostnameGeneratorListResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// List
	HostnameGeneratorList *shared.HostnameGeneratorList
}

func (g *GetHostnameGeneratorListResponse) GetContentType() string {
	if g == nil {
		return ""
	}
	return g.ContentType
}

func (g *GetHostnameGeneratorListResponse) GetStatusCode() int {
	if g == nil {
		return 0
	}
	return g.StatusCode
}

func (g *GetHostnameGeneratorListResponse) GetRawResponse() *http.Response {
	if g == nil {
		return nil
	}
	return g.RawResponse
}

func (g *GetHostnameGeneratorListResponse) GetHostnameGeneratorList() *shared.HostnameGeneratorList {
	if g == nil {
		return nil
	}
	return g.HostnameGeneratorList
}
